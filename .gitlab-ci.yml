stages:
  - check
  - report
  - sonarqube
  - deploy
  - trigger

variables:
  ENV_NAME: ""
  VER_NAME: ""
  DEPLOY: ${deploy}

before_script:
  - |
    if [[ "$CI_COMMIT_REF_NAME" =~ ^([^-]+)-(.+)$ ]]; then
      export ENV_NAME=${BASH_REMATCH[1]}
      export VER_NAME=${BASH_REMATCH[2]}
    elif  [[ "$CI_COMMIT_REF_NAME" = "main" ]]; then
      echo "合并发布，source: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME; target: CI_COMMIT_REF_NAME || CI_MERGE_REQUEST_TARGET_BRANCH_NAME = $CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
      if [[ "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" =~ ^([^-]+)-(.+)$ ]]; then
        export ENV_NAME=prd
        export VER_NAME=${BASH_REMATCH[2]}
      fi
    fi
  - sed -i "s/\$VERSION/$VER_NAME/g" ./cicd/$ENV_NAME/.env
  - export $(cat ./cicd/$ENV_NAME/.env | xargs)

sonar-job:
  stage: sonarqube
  #  only:
  #    - main
  #    #- /^prd/
  tags:
    - cicd
  script:
    - echo "sonar scanner begin..."
    - sonar-scanner -Dsonar.analysis.CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME -Dsonar.branch.name=$CI_COMMIT_REF_NAME -Dsonar.projectVersion=$CI_COMMIT_REF_NAME

deploy-job:
  stage: deploy
  tags:
    - cicd
  script:
    - set -e
    - echo "current branch is $CI_COMMIT_REF_NAME"
    - cfl=$(git log -m -1 --name-only --pretty="format:" HEAD)
    - cfs=$(echo $cfl | tr '\n' ' ')
    - ccm=$(echo $CI_COMMIT_MESSAGE | tr '\n' ' ')
    - echo "参数列表:'$GITLAB_USER_NAME' '$GITLAB_USER_EMAIL' '$MODULE_CODE' '$CI_COMMIT_REF_NAME' '$CI_COMMIT_SHA' '$ccm' '$cfs'"
    - echo "execute cmd :mvn clean deploy -Dmaven.test.skip=true to deploy shdy-task modules"

    - |
      set +e 
      mvn clean deploy -s /usr/share/maven/conf/settings-shdy.xml -U -Dmaven.test.skip=true
      DEPLOY_EXIT_CODE=$?
      echo "Maven deploy exit code: $DEPLOY_EXIT_CODE"

      if [ $DEPLOY_EXIT_CODE -ne 0 ]; then
        echo "Maven deploy failed."
        sh ./cicd/$ENV_NAME/ci_webhook.sh "$GITLAB_USER_NAME" "$GITLAB_USER_EMAIL" "$MODULE_CODE/$MODULE_NAME" "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA" "$ccm" "$cfs" 1
        exit 1
      else
        echo "Maven deploy succeeded."
        echo "scp $ENV_NAME config files to remote server[$SSH_HOST/$APPLICATION_ROOT]"
        sshpass -p $SSH_PASS scp -r -o StrictHostKeyChecking=no ./cicd/$ENV_NAME $SSH_USER@$SSH_HOST:$APPLICATION_ROOT
        sh ./cicd/$ENV_NAME/ci_webhook.sh "$GITLAB_USER_NAME" "$GITLAB_USER_EMAIL" "$MODULE_CODE/$MODULE_NAME" "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA" "$ccm" "$cfs" 0
        echo "deploy complete..."
      fi


trigger-job:
  stage: trigger
  tags:
    - cicd
  script:
    - sshpass -p $SSH_PASS ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST sh $APPLICATION_ROOT/$ENV_NAME/cicd.sh